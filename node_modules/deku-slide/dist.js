'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _condenseKeys = require('condense-keys');

var _condenseKeys2 = _interopRequireDefault(_condenseKeys);

var _deepEqual = require('deep-equal');

var _deepEqual2 = _interopRequireDefault(_deepEqual);

var _magicVirtualElement = require('magic-virtual-element');

var _magicVirtualElement2 = _interopRequireDefault(_magicVirtualElement);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var _swiper = require('swiper');

var _swiper2 = _interopRequireDefault(_swiper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
	arrows: {
		type: 'boolean'
	},
	class: {
		type: 'string'
	},
	duration: {
		type: 'number'
	},
	loop: {
		type: 'boolean'
	},
	onInit: {
		type: 'function'
	},
	options: {
		type: 'object'
	},
	pagination: {
		type: 'boolean'
	},
	play: {
		type: 'boolean'
	},
	speed: {
		type: 'boolean'
	},
	vertical: {
		type: 'boolean'
	}
}; /** @jsx dom */


var defaultProps = {
	duration: 3000,
	loop: false,
	onInit: function onInit() {},
	play: false,
	speed: 300
};

var initialState = function initialState() {
	return { active: 0 };
};

var init = function init(_ref, el) {
	var props = _ref.props;
	var arrows = props.arrows;
	var duration = props.duration;
	var loop = props.loop;
	var onInit = props.onInit;
	var options = props.options;
	var pagination = props.pagination;
	var play = props.play;
	var speed = props.speed;
	var vertical = props.vertical;

	var swiper = new _swiper2.default(el.querySelector('.swiper-container'), (0, _condenseKeys2.default)((0, _objectAssign2.default)({
		autoplay: play && duration,
		autoplayDisableOnInteraction: false,
		direction: vertical ? 'vertical' : 'horizontal',
		loop: loop,
		paginationClickable: true,
		speed: speed
	}, options, {
		nextButton: arrows ? '.swiper-button-next' : null,
		pagination: pagination ? '.swiper-pagination' : null,
		prevButton: arrows ? '.swiper-button-prev' : null,
		slideClass: 'swiper-slide',
		wrapperClass: 'swiper-wrapper'
	})));

	onInit(swiper);
};

var getArrows = function getArrows(arrows) {
	return arrows && (0, _magicVirtualElement2.default)(
		'div',
		{ 'class': 'Swiper-controls' },
		(0, _magicVirtualElement2.default)('div', { 'class': 'swiper-button-prev' }),
		(0, _magicVirtualElement2.default)('div', { 'class': 'swiper-button-next' })
	);
};

var getPagination = function getPagination(pagination) {
	return pagination && (0, _magicVirtualElement2.default)('div', { 'class': 'swiper-pagination' });
};
var afterMount = function afterMount(_ref2, el) {
	var props = _ref2.props;
	return requestAnimationFrame(function () {
		return init({ props: props }, el);
	});
};
var shouldUpdate = function shouldUpdate(_ref3, nextProps) {
	var props = _ref3.props;
	return !(0, _deepEqual2.default)(props, nextProps);
};

var render = function render(_ref4) {
	var props = _ref4.props;
	var arrows = props.arrows;
	var children = props.children;
	var pagination = props.pagination;

	var items = children.map(function (x) {
		return (0, _magicVirtualElement2.default)(
			'div',
			{ 'class': 'swiper-slide' },
			x
		);
	});

	return (0, _magicVirtualElement2.default)(
		'div',
		{ 'class': ['Swiper', props.class] },
		(0, _magicVirtualElement2.default)(
			'div',
			{ 'class': 'swiper-container' },
			(0, _magicVirtualElement2.default)(
				'div',
				{ 'class': 'swiper-wrapper' },
				items
			),
			getArrows(arrows),
			getPagination(pagination)
		)
	);
};

exports.default = { afterMount: afterMount, defaultProps: defaultProps, initialState: initialState, propTypes: propTypes, render: render, shouldUpdate: shouldUpdate };
